<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pause_list = ds_list_create();
ds_list_add(pause_list, "Continue", "Quit");

paused = false;
pause_selected = 0;

//item_list = ds_list_create();
//ds_list_copy(item_list, obj_menu.item_list);

/*item_list = ds_list_create();
for (var i = 0; i &lt; 6; i++)
    ds_list_add(item_list, i);*/
    
item_title_list = ds_list_create();
ds_list_add(item_title_list, "Lantern", "Whip", "Gun", "Grappling Hook", "Dash Boots", "Amulet", "Your Life");

item_desc_list = ds_list_create();
ds_list_add(item_desc_list, 
    "Gives a larger area of vision", 
    "Provides a strong short range attack", 
    "Provides a weak long range attack", 
    "Can attach to ceilings", 
    "Provides an air dash ability", 
    "Allows you to take an extra hit",
    "There's only one thing you have left to sacrifice..."
);

sacrifice = false;
selected = 0;
sacrifices = 0;
sac_msg = 0;
sac_name = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_room_goto(room);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var left_pressed = false;
var right_pressed = false;
var up_pressed = false;
var down_pressed = false;
var confirm_pressed = false;
var exit_pressed = false;

if (!scr_fading()) {
    left_pressed = keyboard_check_pressed(vk_left) || obj_controls.leftstick_left_pressed || gamepad_button_check_pressed(0, gp_padl);
    right_pressed = keyboard_check_pressed(vk_right) || obj_controls.leftstick_right_pressed || gamepad_button_check_pressed(0, gp_padr);
    up_pressed = keyboard_check_pressed(vk_up) || obj_controls.leftstick_up_pressed || gamepad_button_check_pressed(0, gp_padu);
    down_pressed = keyboard_check_pressed(vk_down) || obj_controls.leftstick_down_pressed || gamepad_button_check_pressed(0, gp_padd);
    confirm_pressed = keyboard_check_pressed(ord('A')) || gamepad_button_check_pressed(0, gp_face1);
    exit_pressed = keyboard_check_pressed(vk_escape) || gamepad_button_check_pressed(0, gp_start);
}

if (!scr_paused()) {
    sac_msg -= 0.01;
    if (sac_msg &lt; 0)
    sac_msg = 0;
}

if (sacrifice) {
    if (left_pressed &amp;&amp; selected &gt; 0) {
        audio_play_sound(snd_select, 0, false);
        selected--;
    }
    if (right_pressed &amp;&amp; selected &lt; ds_list_size(item_list) - 1) {
        audio_play_sound(snd_select, 0, false);
        selected++;
    }
    if (confirm_pressed) {
        audio_stop_sound(mus_sacrifice);
        audio_play_sound(snd_confirm, 0, false);
        sac_msg = 2;
        sac_name = ds_list_find_value(item_title_list, ds_list_find_value(item_list, selected));
        if (ds_list_find_value(item_list, selected) == 6) {
            instance_destroy();
            room_goto_next();
        }
        else {
            ds_list_delete(item_list, selected);
            
            sacrifices = 6 - ds_list_size(item_list);
            
            ini_open("ss_data");
            ini_write_string("Save", "items", ds_list_write(item_list));
            ini_close();
            
            selected = 0;
            with (obj_door)
                event_user(0);
            sacrifice = false;
            obj_altar.burn = true;
        }
    }
}

if (exit_pressed) {
    if (instance_exists(obj_player)) {
        audio_play_sound(snd_cancel, 0, false);
        sac_msg = 0;
        paused = !paused;
        if (paused)
            audio_pause_sound(mus_main);
        else
            audio_resume_sound(mus_main);
    }
}

if (!instance_exists(obj_player)) {
    audio_stop_sound(snd_cancel);
    paused = false;
}

if (paused) {
    if (up_pressed &amp;&amp; pause_selected &gt; 0) {
        audio_play_sound(snd_select, 0, false);
        pause_selected--;
    }
    if (down_pressed &amp;&amp; pause_selected &lt; ds_list_size(pause_list) - 1) {
        audio_play_sound(snd_select, 0, false);
        pause_selected++;
    }
    if (confirm_pressed) {
        audio_play_sound(snd_confirm, 0, false);
        switch (pause_selected) {
            case 0:
                paused = false;
                audio_resume_sound(mus_main);
                break;
            case 1:
                persistent = false;
                scr_room_goto(rm_menu);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!audio_is_playing(mus_main))
    audio_play_sound(mus_main, 1, true);
    
if (ds_list_empty(item_list))
    ds_list_add(item_list, 6);
    
room_speed = 60;
instance_create(0, 0, obj_dark);
instance_create(0, 0, obj_background);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>524</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>8969523</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_set_font(fnt_item);
draw_set_halign(fa_middle);
draw_set_valign(fa_center);

if (!scr_check_item("Your Life") &amp;&amp; !instance_exists(obj_menu)) {
    var place = view_xview[0] + view_wview[0] / 2 - (ds_list_size(item_list) * 40) / 2
    for (var i = 0; i &lt; ds_list_size(item_list); i++)
        draw_sprite(spr_items, ds_list_find_value(item_list, i), place + 20 + 40 * i , view_yview[0] + 24);
}

if (sacrifice) {
    draw_set_color(c_black);
    draw_set_alpha(0.5);
    draw_rectangle(view_xview[0], view_yview[0], view_xview[0] + view_wview[0], view_yview[0] + view_hview[0], false);
    draw_set_alpha(1);
    
    for (var i = 0; i &lt; ds_list_size(item_list); i++) {
        draw_sprite(spr_items, ds_list_find_value(item_list, i), view_xview[0] + view_wview[0] / 2 + i * 64 - selected * 64, view_yview[0] + view_hview[0] / 2);
    }
    draw_sprite(spr_selector, 0, view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2);
    
    var item = ds_list_find_value(item_list, selected);
    
    draw_set_color(c_white);
    draw_set_font(fnt_item);
    draw_set_halign(fa_middle);
    draw_set_valign(fa_center);
    
    draw_text(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2 + 48, ds_list_find_value(item_title_list, item));
    
    draw_set_font(fnt_desc);
    
    draw_text(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2 + 80, ds_list_find_value(item_desc_list, item));
    
    var help_text = scr_parse_controls_text("&lt;lr&gt; to select - &lt;a&gt; to confirm");
    
    draw_text(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2 + 110, help_text);
    
    scr_curse_text(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 4, "What will you sacrifice?");
}

if (paused) {
    draw_set_color(c_black);
    draw_set_alpha(0.5);
    draw_rectangle(view_xview[0], view_yview[0], view_xview[0] + view_wview[0], view_yview[0] + view_hview[0], false);
    draw_set_alpha(1);
    
    draw_set_color(c_white);
    draw_set_font(fnt_item);
    draw_set_halign(fa_middle);
    draw_set_valign(fa_center);
    
    draw_text(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 3, "PAUSED");
    
    draw_set_font(fnt_menu);
    
    var gap = 24;
    for (var i = 0; i &lt; ds_list_size(pause_list); i++) {
        var text = ds_list_find_value(pause_list, i);
        if (i == pause_selected)
            text = "- " + text + " -";
        draw_text(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] * (2 / 3) - gap * ds_list_size(pause_list) / 2 + gap * i, text);
    }
    
    draw_set_font(fnt_desc);
    
    var select_text = scr_parse_controls_text("Select: &lt;ud&gt;");
    var confirm_text = scr_parse_controls_text("Confirm: &lt;a&gt;");
    draw_text(view_xview[0] + view_wview[0] / 4, view_yview[0] + view_hview[0] - 16, select_text);
    draw_text(view_xview[0] + view_wview[0] * (3 / 4), view_yview[0] + view_hview[0] - 16, confirm_text);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
