<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>leftstick_left_held = false;
leftstick_right_held = false;
leftstick_up_held = false;
leftstick_down_held = false;
leftstick_left_pressed = false;
leftstick_right_pressed = false;
leftstick_up_pressed = false;
leftstick_down_pressed = false;

gamepad_set_axis_deadzone(0, 0.5);

command_list = ds_list_create();
ds_list_add(command_list,
    "&lt;lr&gt;",
    "&lt;ud&gt;",
    "&lt;a&gt;",
    "&lt;lrkey&gt;",
    "&lt;ukey&gt;",
    "&lt;akey&gt;",
    "&lt;skey&gt;",
    "&lt;dkey&gt;"
);

command_map = ds_map_create();
for (var i = 0; i &lt; ds_list_size(command_list); i++)
    ds_map_add(command_map, ds_list_find_value(command_list, i), "");

gamepad = gamepad_is_connected(0);
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>leftstick_left_pressed = false;
leftstick_right_pressed = false;
leftstick_up_pressed = false;
leftstick_down_pressed = false;

if (!leftstick_left_held)
    leftstick_left_pressed = gamepad_axis_value(0, gp_axislh) &lt; 0;
if (!leftstick_right_held)
    leftstick_right_pressed = gamepad_axis_value(0, gp_axislh) &gt; 0;
if (!leftstick_up_held)
    leftstick_up_pressed = gamepad_axis_value(0, gp_axislv) &lt; 0;
if (!leftstick_down_held)
    leftstick_down_pressed = gamepad_axis_value(0, gp_axislv) &gt; 0;

leftstick_left_held = gamepad_axis_value(0, gp_axislh) &lt; 0;
leftstick_right_held = gamepad_axis_value(0, gp_axislh) &gt; 0;
leftstick_up_held = gamepad_axis_value(0, gp_axislv) &lt; 0;
leftstick_down_held = gamepad_axis_value(0, gp_axislv) &gt; 0;

gamepad = scr_check_gamepad(gamepad);
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (gamepad) {
    ds_map_replace(command_map, "&lt;lr&gt;", "Left stick");
    ds_map_replace(command_map, "&lt;ud&gt;", "Left stick");
    ds_map_replace(command_map, "&lt;a&gt;", "A button");
    ds_map_replace(command_map, "&lt;lrkey&gt;", "left stick");
    ds_map_replace(command_map, "&lt;ukey&gt;", "A button");
    ds_map_replace(command_map, "&lt;akey&gt;", "X button");
    ds_map_replace(command_map, "&lt;skey&gt;", "B button");
    ds_map_replace(command_map, "&lt;dkey&gt;", "Y button");
}
else {
    ds_map_replace(command_map, "&lt;lr&gt;", "Left/Right");
    ds_map_replace(command_map, "&lt;ud&gt;", "Up/Down");
    ds_map_replace(command_map, "&lt;a&gt;", "A");
    ds_map_replace(command_map, "&lt;lrkey&gt;", "Left and Right keys");
    ds_map_replace(command_map, "&lt;ukey&gt;", "Up key");
    ds_map_replace(command_map, "&lt;akey&gt;", "A key");
    ds_map_replace(command_map, "&lt;skey&gt;", "S key");
    ds_map_replace(command_map, "&lt;dkey&gt;", "D key");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
