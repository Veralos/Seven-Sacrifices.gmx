<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//constants
accel = 1;
deccel = 0.5;
max_speed_x = 3;
jump_speed = -7.5;
jump_reduce = 2.3;
max_grav = 0.5;
max_speed_y = 8;

//variables
speed_x = 0;
speed_y = 0;
facing = 1;
sprite = spr_person;
animate = 0;
whip = 0;
shoot = 0;
dash = 0;
can_dash = false;
if (scr_check_item("Amulet"))
    shield = true;
else
    shield = false;
inv = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!obj_control.sacrifice) {
    audio_play_sound(snd_die, 0, false);
    with (instance_create(x, y, obj_part))
        sprite_index = spr_person_dead;
    obj_control.alarm[0] = 60;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inv--;
if (inv &lt; 0)
    inv = 0;

if (!obj_control.sacrifice) {
    if (whip &gt; 0)
        whip -= 0.25;
    else if (shoot &gt; 0)
        shoot -= 0.25;
    else if (instance_exists(obj_hook)) {
        if (!obj_hook.move) {
            if (place_free(x, y - 8))
                y -= 8;
            else {
                audio_play_sound(snd_land, 0, false);
                move_contact_solid(90, 8);
                with (obj_hook)
                    instance_destroy();
            }
        }
    }
    else if (dash &gt; 0) {
        var ai = instance_create(x, y, obj_afterimage);
        ai.facing = facing;
        if (place_free(x + facing * 12, y))
            x += 12 * facing;
        else {
            audio_play_sound(snd_land, 0, false);
            move_contact_solid(90 - facing * 90, 12);
            dash = 0;
        }
        dash -= 1;
    }
    else {
        if (keyboard_check(vk_left))
            speed_x -= accel;
        if (keyboard_check(vk_right))
            speed_x += accel;
        if (abs(speed_x) &gt; 0) {
            facing = sign(speed_x);
            speed_x -= sign(speed_x) * deccel;
        }
        if (abs(speed_x) &gt; max_speed_x)
            speed_x = sign(speed_x) * max_speed_x;
            
        if (keyboard_check_pressed(vk_up)) {
            if (place_free(x, y + 1)) {
                if (can_dash &amp;&amp; scr_check_item("Dash Boots")) {
                    audio_play_sound(snd_dash, 0, false);
                    dash = 8;
                    can_dash = false;
                    speed_x = 0;
                    speed_y = 0;
                }
            }
            else {
                audio_play_sound(snd_jump, 0, false);
                speed_y = jump_speed;
            }
        }
        if (keyboard_check_released(vk_up) &amp;&amp; speed_y &lt; 0)
            speed_y /= jump_reduce;
            
        if (place_free(x, y + 1))
            grav = max_grav;
        else {
            grav = 0;
            can_dash = true;
        }
            
        speed_y += grav;
        if (speed_y &gt; max_speed_y)
            speed_y = max_speed_y; 
            
        var move_x = round(speed_x);
        var move_y = round(speed_y);
        
        if (place_free(x + move_x, y))
            x += move_x;
        else {
            move_contact_solid(90 - 90 * sign(move_x), abs(move_x));
            speed_x = 0;
        }
        
        if (place_free(x, y + move_y))
            y += move_y;
        else {
            if (speed_y &gt; 0)
                audio_play_sound(snd_land, 0, false);
            move_contact_solid(-90 * sign(move_y), abs(move_y));
            speed_y = 0;
        }
        
        if (!place_free(x, y + 1)) {
            if (keyboard_check_pressed(ord('A')) &amp;&amp; scr_check_item("Whip")) {
                audio_play_sound(snd_whip, 0, false);
                var whip_hb = instance_create(x, y, obj_whip);
                whip_hb.image_xscale = facing;
                whip = 6;
                speed_x = 0;
            }
            if (keyboard_check_pressed(ord('S')) &amp;&amp; scr_check_item("Gun")) {
                audio_play_sound(snd_shoot, 0, false);
                var bullet = instance_create(x + facing * 8, y - 4, obj_bullet);
                bullet.facing = facing;
                shoot = 4;
                speed_x = 0;
            }
            else if (keyboard_check_pressed(ord('D')) &amp;&amp; scr_check_item("Grappling Hook")) {
                audio_play_sound(snd_hook, 0, false);
                instance_create(x, y - 8, obj_hook);
                speed_x = 0;
            }
        }
    }
    
    //animation
    
    if (whip &gt; 0) {
        sprite = spr_person_whip;
        animate = 6 - whip;
    }
    else if (shoot &gt; 0) {
        sprite = spr_person_shoot;
        animate = 4 - shoot;
    }
    else if (instance_exists(obj_hook))
        sprite = spr_person_hook;
    else if (dash &gt; 0)
        sprite = spr_person_dash;
    else if (place_free(x, y + 1)) {
        if (speed_y &gt; 0)
            sprite = spr_person_fall;
        else
            sprite = spr_person_jump;
    }
    else if (abs(speed_x) &gt; 1) {
        sprite = spr_person_run;
        
        var step_flag = false;
        if (animate &lt; 4)
            step_flag = true;
            
        animate += abs(speed_x) / 12;
        
        if (animate &gt;= 4 &amp;&amp; step_flag)
            audio_play_sound(snd_step, 0, false);
        
        if (animate &gt;= 8) {
            audio_play_sound(snd_step, 0, false);
            animate = 0;
        }
    }
    else {
        sprite = spr_person;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (inv &lt;= 0 &amp;&amp; dash &lt;= 0 &amp;&amp; other.inv &lt;= 0) {
    if (shield) {
        audio_play_sound(snd_hurt, 0, false);
        shield = false;
        inv = 120;
    }
    else
        instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_spikes">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (inv &lt;= 0 &amp;&amp; dash &lt;= 0) {
    if (shield) {
        audio_play_sound(snd_hurt, 0, false);
        shield = false;
        inv = 120;
    }
    else
        instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_altar">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(snd_main_music);
audio_play_sound(snd_end, 0, false);
audio_play_sound(snd_curse_music, 1, true);

obj_control.sacrifice = true;
instance_create(other.x - 16, other.y + 4, obj_end_player);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>524</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>2666028</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (inv mod 10 &lt; 5) {
    draw_sprite_ext(sprite, animate, x, y, facing, 1, 0, c_white, 1);
    
    if (instance_exists(obj_hook)) {
        draw_set_color(make_color_rgb(100, 72, 30));
        draw_line_width(obj_hook.x - 1, obj_hook.y, x - 1, y - 10, 2);
    }
}

if (shield) {
    draw_set_color(make_color_rgb(44, 174, 40));
    draw_set_alpha(0.25);
    draw_circle(x - 1, y - 1, 16, false);
    draw_set_alpha(0.5);
    draw_circle(x - 1, y - 1, 16, true);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = obj_altar.x;
y = obj_altar.y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
